{"ast":null,"code":"var _jsxFileName = \"/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/components/MessagePage/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const fetchMessages = () => {\n    fetch(\"http://localhost:3001/message\").then(response => response.json()).then(data => {\n      setMessages(data);\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n    });\n  };\n  function sendMessages() {\n    fetch(\"http://localhost:3001/sendMessage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: message\n      })\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"Message sent successfully\");\n        fetchMessages();\n      } else if (response.status === 400) {\n        throw new Error(\"Cannot send message\");\n      }\n    }).catch(error => {\n      alert(error.message);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.slice().map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent by: \", msg.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent to: \", msg.receiverName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(msg.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      className: \"message\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessages,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Messages, \"R9cL6wTFJ4Cm4nINx8rfDHzMChE=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Messages","_s","message","setMessage","messages","setMessages","fetchMessages","fetch","then","response","json","data","catch","error","console","sendMessages","method","headers","body","JSON","stringify","ok","log","status","Error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","map","msg","index","text","userName","receiverName","Date","date","toLocaleString","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/components/MessagePage/Messages.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Messages(){\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const fetchMessages = () => {\n        fetch(\"http://localhost:3001/message\")\n            .then(response => response.json())\n            .then(data => {\n                setMessages(data);\n            })\n            .catch(error => {\n                console.error('Error fetching messages:', error);\n            });\n    };\n    \n    function sendMessages(){\n        fetch(\"http://localhost:3001/sendMessage\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                message: message,\n            }),\n        })\n        .then((response) => {\n            if (response.ok) {\n                console.log(\"Message sent successfully\")\n                fetchMessages();\n            } else if (response.status === 400) {\n                throw new Error(\"Cannot send message\");\n            }\n        })\n        .catch((error) => {\n            alert(error.message);\n        });\n    }\n    \n    return(\n        <div>\n            <h1>Messages</h1>\n            <div className=\"message-list\">\n                {messages.slice().map((msg, index) => (\n                    <div key={index} className=\"message-item\">\n                        <p>{msg.text}</p>\n                        <p>Sent by: {msg.userName}</p>\n                        <p>Sent to: {msg.receiverName}</p>\n                        <p>Date: {new Date(msg.date).toLocaleString()}</p>\n                    </div>\n                ))}\n            </div>\n            <input\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                className=\"message\"\n                type=\"text\"\n              />\n            <button onClick={sendMessages}>Send Message</button>\n        </div>\n    );\n}\n\nexport default Messages;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
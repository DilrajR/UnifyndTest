{"ast":null,"code":"var _jsxFileName = \"/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/components/InboxPage/Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Inbox.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  function getInbox() {\n    fetch(\"http://localhost:3001/inbox\").then(response => response.json()).then(data => {\n      const sortedMessages = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n      setMessages(sortedMessages);\n    }).catch(error => {\n      console.error('Error fetching inbox:', error);\n    });\n  }\n  function handleMessageClick(message) {\n    fetch(\"http://localhost:3001/setUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: message.userName\n      })\n    }).then(response => {\n      if (response.ok) {\n        window.location.href = '/Messages';\n      } else {\n        throw new Error('Failed to send message');\n      }\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  }\n  useEffect(() => {\n    getInbox();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"message-item\",\n        onClick: () => handleMessageClick(msg),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Sent\",\n          children: [\"Sent From: \", msg.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Sent\",\n          children: [\"Sent To: \", msg.receiverName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Inbox, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Inbox","_s","messages","setMessages","getInbox","fetch","then","response","json","data","sortedMessages","sort","a","b","Date","date","catch","error","console","handleMessageClick","message","method","headers","body","JSON","stringify","userId","userName","ok","window","location","href","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","onClick","receiverName","_c","$RefreshReg$"],"sources":["/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/components/InboxPage/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Inbox.css';\n\nfunction Inbox() {\n    const [messages, setMessages] = useState([]);\n\n    function getInbox() {\n        fetch(\"http://localhost:3001/inbox\")\n            .then(response => response.json())\n            .then(data => {\n                const sortedMessages = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n                setMessages(sortedMessages);\n            })\n            .catch(error => {\n                console.error('Error fetching inbox:', error);\n            });\n    }\n\n    function handleMessageClick(message) {\n        fetch(\"http://localhost:3001/setUser\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                userId: message.userName\n            }),\n        })\n        .then(response => {\n            if (response.ok) {\n                window.location.href = '/Messages';\n            } else {\n                throw new Error('Failed to send message');\n            }\n        })\n        .catch(error => {\n            console.error('Error sending message:', error);\n        });\n    }\n\n    useEffect(() => {\n        getInbox();\n    }, []);\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"message-list\">\n                {messages.map((msg, index) => (\n                    <button key={index} className=\"message-item\" onClick={() => handleMessageClick(msg)}>\n                        <p className='Sent'>Sent From: {msg.userName}</p>\n                        <p className='Sent'>Sent To: {msg.receiverName}</p>\n                        <p>{msg.message}</p>\n                        <p>{msg.date}</p>\n                    </button>\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default Inbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    // Simulate an asynchronous authentication check\n    setTimeout(() => {\n      // Replace this with your actual authentication logic\n      const userId = localStorage.getItem('userId');\n      if (userId) {\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n    }, 1000);\n  }, []);\n  if (isAuthenticated) {\n    return children;\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n};\n_s(PrivateRoute, \"whLl+38E7ub8R5l5bdVAfFlsuKk=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","setIsAuthenticated","location","setTimeout","userId","localStorage","getItem","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/PrivateRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\nconst PrivateRoute = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const location = useLocation();\n\n    useEffect(() => {\n        // Simulate an asynchronous authentication check\n        setTimeout(() => {\n            // Replace this with your actual authentication logic\n            const userId = localStorage.getItem('userId');\n            if (userId) {\n                setIsAuthenticated(true);\n            } else {\n                setIsAuthenticated(false);\n            }\n        }, 1000);\n    }, []);\n\n    if (isAuthenticated) {\n        return children;\n    } else {\n        return <Navigate to=\"/\" state={{ from: location }} replace />;\n    }\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ;IACAW,UAAU,CAAC,MAAM;MACb;MACA,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAIF,MAAM,EAAE;QACRH,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAM;QACHA,kBAAkB,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,eAAe,EAAE;IACjB,OAAOF,QAAQ;EACnB,CAAC,MAAM;IACH,oBAAOF,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP;MAAS,CAAE;MAACQ,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjE;AACJ,CAAC;AAACf,EAAA,CAtBIF,YAAY;EAAA,QAEGH,WAAW;AAAA;AAAAqB,EAAA,GAF1BlB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
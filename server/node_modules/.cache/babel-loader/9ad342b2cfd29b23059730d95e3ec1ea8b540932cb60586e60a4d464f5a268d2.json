{"ast":null,"code":"var _jsxFileName = \"/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/components/MessagePage/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Messages.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const fetchMessages = () => {\n    fetch(\"http://localhost:3001/message\").then(response => response.json()).then(data => {\n      setMessages(data);\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n    });\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  function sendMessages() {\n    if (!message.trim()) {\n      alert(\"Message cannot be blank\");\n      return;\n    }\n    fetch(\"http://localhost:3001/sendMessage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: message\n      })\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"Message sent successfully\");\n        fetchMessages();\n        setMessage(\"\");\n      } else if (response.status === 400) {\n        throw new Error(\"Cannot send message\");\n      }\n    }).catch(error => {\n      alert(error.message);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagepage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-item`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-metadata\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Sent by: \", msg.userName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" Sent to: \", msg.receiverName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 59\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" Date: \", new Date(msg.date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          className: \"message\",\n          type: \"text\",\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessages,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(Messages, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","message","setMessage","messages","setMessages","fetchMessages","fetch","then","response","json","data","catch","error","console","sendMessages","trim","alert","method","headers","body","JSON","stringify","ok","log","status","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","userName","receiverName","Date","date","value","onChange","e","target","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/components/MessagePage/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Messages.css';\n\nfunction Messages() {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const fetchMessages = () => {\n        fetch(\"http://localhost:3001/message\")\n            .then(response => response.json())\n            .then(data => {\n                setMessages(data);\n            })\n            .catch(error => {\n                console.error('Error fetching messages:', error);\n            });\n    };\n\n    useEffect(() => {\n        fetchMessages();\n    }, []);\n\n    function sendMessages() {\n\n        if (!message.trim()) {\n            alert(\"Message cannot be blank\");\n            return;\n        }\n\n        fetch(\"http://localhost:3001/sendMessage\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                message: message,\n            }),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    console.log(\"Message sent successfully\")\n                    fetchMessages();\n                    setMessage(\"\");\n                } else if (response.status === 400) {\n                    throw new Error(\"Cannot send message\");\n                }\n            })\n            .catch((error) => {\n                alert(error.message);\n            });\n    }\n\n    return (\n        <>\n          <Navbar />\n          <div className=\"messagepage\">\n            <div className=\"message-list\">\n              {messages.map((msg, index) => (\n                <div key={index} className={`message-item`}>\n                  <p>{msg.message}</p>\n                  <div className=\"message-metadata\">\n                    <span>Sent by: {msg.userName}</span> |<span> Sent to: {msg.receiverName}</span> |\n                    <span> Date: {new Date(msg.date)}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"submit-div\">\n              <input\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                className=\"message\"\n                type=\"text\"\n                placeholder=\"Type a message...\"\n              />\n              <button onClick={sendMessages}>Send</button>\n            </div>\n          </div>\n        </>\n      );    \n}\n\nexport default Messages;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,+BAA+B,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVN,WAAW,CAACM,IAAI,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACV,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZY,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASS,YAAYA,CAAA,EAAG;IAEpB,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,CAAC,EAAE;MACjBC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACJ;IAEAV,KAAK,CAAC,mCAAmC,EAAE;MACvCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBpB,OAAO,EAAEA;MACb,CAAC;IACL,CAAC,CAAC,CACGM,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACc,EAAE,EAAE;QACbT,OAAO,CAACU,GAAG,CAAC,2BAA2B,CAAC;QACxClB,aAAa,CAAC,CAAC;QACfH,UAAU,CAAC,EAAE,CAAC;MAClB,CAAC,MAAM,IAAIM,QAAQ,CAACgB,MAAM,KAAK,GAAG,EAAE;QAChC,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MAC1C;IACJ,CAAC,CAAC,CACDd,KAAK,CAAEC,KAAK,IAAK;MACdI,KAAK,CAACJ,KAAK,CAACX,OAAO,CAAC;IACxB,CAAC,CAAC;EACV;EAEA,oBACIL,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA,CAACF,MAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlC,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC1B9B,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAL,QAAA,EAC1BvB,QAAQ,CAAC6B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBtC,OAAA;UAAiBmC,SAAS,EAAG,cAAc;UAAAL,QAAA,gBACzC9B,OAAA;YAAA8B,QAAA,EAAIO,GAAG,CAAChC;UAAO;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBlC,OAAA;YAAKmC,SAAS,EAAC,kBAAkB;YAAAL,QAAA,gBAC/B9B,OAAA;cAAA8B,QAAA,GAAM,WAAS,EAACO,GAAG,CAACE,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,MAAE,eAAAlC,OAAA;cAAA8B,QAAA,GAAM,YAAU,EAACO,GAAG,CAACG,YAAY;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,MAC/E,eAAAlC,OAAA;cAAA8B,QAAA,GAAM,SAAO,EAAC,IAAIW,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA,GALEI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzB9B,OAAA;UACE2C,KAAK,EAAEtC,OAAQ;UACfuC,QAAQ,EAAGC,CAAC,IAAKvC,UAAU,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CR,SAAS,EAAC,SAAS;UACnBY,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC;QAAmB;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACFlC,OAAA;UAAQiD,OAAO,EAAE/B,YAAa;UAAAY,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEX;AAAC9B,EAAA,CA7EQD,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AA+EjB,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
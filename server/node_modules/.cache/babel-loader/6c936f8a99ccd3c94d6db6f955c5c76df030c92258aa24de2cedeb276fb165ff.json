{"ast":null,"code":"var _jsxFileName = \"/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  let isAuthenticated = false;\n  fetch(\"http://localhost:3001/Login\").then(res => {\n    if (!res.ok) {\n      throw new Error(\"Failed to fetch user data\");\n    }\n    return res.json();\n  }).then(data => {\n    const userId = data;\n    if (userId) {\n      isAuthenticated = true;\n    }\n  }).catch(error => console.error(\"Error fetching data:\", error));\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","PrivateRoute","component","Component","rest","isAuthenticated","fetch","then","res","ok","Error","json","data","userId","catch","error","console","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/dilrajrandhawa/Projects/GitHub/Unifynd/src/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    let isAuthenticated = false;\n\n    fetch(\"http://localhost:3001/Login\")\n        .then((res) => {\n            if (!res.ok) {\n                throw new Error(\"Failed to fetch user data\");\n            }\n            return res.json();\n        })\n        .then((data) => {\n            const userId = data;\n            if (userId) {\n                isAuthenticated = true;\n            }\n        })\n        .catch((error) => console.error(\"Error fetching data:\", error));\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EACxD,IAAIC,eAAe,GAAG,KAAK;EAE3BC,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAAEC,GAAG,IAAK;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAChD;IACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;EACrB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;IACZ,MAAMC,MAAM,GAAGD,IAAI;IACnB,IAAIC,MAAM,EAAE;MACRR,eAAe,GAAG,IAAI;IAC1B;EACJ,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EAErE,oBACEf,OAAA,CAACH,KAAK;IAAA,GACAO,IAAI;IACRa,MAAM,EAAGC,KAAK,IACZb,eAAe,gBACbL,OAAA,CAACG,SAAS;MAAA,GAAKe;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBtB,OAAA,CAACF,QAAQ;MAACyB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAE1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACE,EAAA,GA9BIvB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}